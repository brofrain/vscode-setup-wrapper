{
  "debug.javascript.codelens.npmScripts": "never",
  "editor.bracketPairColorization.enabled": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": false,
    "source.fixAll.eslint": true,
    "source.organizeImports": false
  },
  "editor.fontFamily": "Fira Code",
  "editor.fontLigatures": true,
  "editor.fontSize": 15.5,
  "editor.glyphMargin": false,
  "editor.guides.bracketPairs": "active",
  "editor.lightbulb.enabled": false,
  "editor.linkedEditing": true,
  "editor.smoothScrolling": true,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 300,
  "files.eol": "\n",
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "mergeEditor.diffAlgorithm": "experimental",
  "search.exclude": {
    ".DS_Store": true,
    ".git": true,
    ".idea": true,
    ".vscode": true,
    "coverage": true,
    "dist": true,
    "node_modules": true,
    "*.svg": true,
    "*.zsh": true,
    "package.json": true,
    "package-lock.json": true,
    "pnpm-lock.yaml": true,
    "yarn.lock": true,
    "Cargo.lock": true
  },
  "search.smartCase": true,
  "terminal.integrated.defaultProfile.linux": "zsh",
  "terminal.integrated.defaultProfile.windows": "Ubuntu (WSL)",
  "terminal.integrated.enablePersistentSessions": false,
  "terminal.integrated.minimumContrastRatio": 1,
  "terminal.integrated.shellIntegration.decorationIconError": "primitive-dot",
  "terminal.integrated.shellIntegration.decorationIconSuccess": "primitive-dot",
  "terminal.integrated.smoothScrolling": true,
  "window.customMenuBarAltFocus": false,
  "window.enableMenuBarMnemonics": false,
  "window.titleBarStyle": "custom",
  "workbench.colorTheme": "Custom",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.layoutControl.enabled": false,
  "workbench.list.smoothScrolling": true,
  "workbench.startupEditor": "welcomePageInEmptyWorkbench",
  "[css][html][javascript][json][json5][jsonc][markdown][scss][typescript][yaml][vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer",
    "editor.formatOnSave": true
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml",
    "editor.formatOnSave": true
  },
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.quickSuggestionsDelay": 10,
  "editor.suggest.filterGraceful": true,
  "editor.suggest.matchOnWordStartOnly": false,
  "editor.suggest.shareSuggestSelections": true,
  "editor.suggest.showDeprecated": false,
  "editor.suggest.showOperators": false,
  "editor.suggest.showColors": false,
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "editor.parameterHints.enabled": false,
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },
  "editor.wordBasedSuggestions": true,
  "editor.wordBasedSuggestionsMode": "allDocuments",
  "css.hover.documentation": false,
  "css.hover.references": false,
  "css.lint.unknownAtRules": "ignore",
  "git.autofetch": "all",
  "git.autofetchPeriod": 60,
  "git.autoStash": true,
  "git.closeDiffOnOperation": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.fetchOnPull": true,
  "git.inputValidationLength": 999,
  "git.inputValidationSubjectLength": null,
  "git.openAfterClone": "always",
  "html.hover.references": false,
  "html.hover.documentation": false,
  "scss.hover.documentation": false,
  "scss.hover.references": false,
  "scss.lint.unknownAtRules": "ignore",
  "browse-lite.startUrl": "localhost:4343",
  "command-runner.commands": {
    "Pass": ":",
    "Run Project": "clear;(  cd ${workspaceFolder} &&  if [ -f package.json ]; then    if cat package.json | grep \"\\\"vite\\\": \\\"\" >/dev/null; then      npx vite --port 4343;    elif cat package.json | grep \"\\\"dev\\\": \\\"\" >/dev/null; then      npm run dev;    elif cat package.json | grep \"\\\"build\\\": \\\"\" >/dev/null; then      npm run build;    else      tput setaf 1; echo \"Nothing to run...\"; tput sgr0;    fi;  elif [ -f Cargo.toml ]; then    RUST_LOG=debug cargo run;  else    tput setaf 1; echo \"Nothing to run...\"; tput sgr0;  fi;)",
    "Run Tests": "clear;(  cd ${workspaceFolder} &&  if [ -f package.json ] && cat package.json | grep \"\\\"test\\\": \\\"\" >/dev/null; then    npm run test;  elif [ -f Cargo.toml ]; then    RUST_LOG=debug cargo test -- --show-output;  else    tput setaf 1; echo \"Tests not found...\"; tput sgr0;  fi;)",
    "Rust Analysis": "clear;(  cd ${workspaceFolder} &&  [ -f Cargo.toml ] &&  cargo clippy &&  (    [ -f package.json ] &&     cat package.json | grep \"\\\"vite\\\": \\\"\" >/dev/null &&    ps aux | grep vite | grep -v grep >/dev/null &&      trunk build  ) || :)"
  },
  "command-runner.showRunCommandInEditorContextMenu": false,
  "command-runner.showRunCommandInExplorerContextMenu": false,
  "command-runner.terminal.autoFocus": false,
  "command-runner.terminal.autoClear": false,
  "command-runner.terminal.name": "Command Runner",
  "codesnap.backgroundColor": "#0000",
  "codesnap.boxShadow": "#0009 5px 5px 30px",
  "codesnap.showWindowControls": false,
  "codesnap.transparentBackground": true,
  "cSpell.allowCompoundWords": true,
  "cSpell.ignorePaths": [
    ".DS_Store",
    ".git",
    ".idea",
    ".vscode",
    "coverage",
    "dist",
    "node_modules",
    "*.svg",
    "*.zsh",
    "package.json",
    "package-lock.json",
    "pnpm-lock.yaml",
    "yarn.lock",
    "Cargo.lock"
  ],
  "cSpell.language": "en",
  "cSpell.maxDuplicateProblems": 2,
  "cSpell.maxNumberOfProblems": 120,
  "cSpell.minWordLength": 3,
  "cSpell.numSuggestions": 0,
  "cSpell.showStatus": false,
  "cSpell.showCommandsInEditorContextMenu": false,
  "cSpell.showSuggestionsLinkInEditorContextMenu": false,
  "cSpell.spellCheckDelayMs": 300,
  "cSpell.useGitignore": false,
  "errorLens.enabledDiagnosticLevels": [
    "error",
    "warning"
  ],
  "errorLens.messageTemplate": "",
  "errorLens.scrollbarHackEnabled": true,
  "eslint.validate": [
    "html",
    "javascript",
    "javascriptreact",
    "json",
    "json5",
    "jsonc",
    "markdown",
    "typescript",
    "typescriptreact",
    "yaml",
    "vue"
  ],
  "gitlens.codeLens.enabled": false,
  "gitlens.currentLine.format": "${author, }${agoOrDate}${' â€¢ 'message}",
  "gitlens.currentLine.scrollable": false,
  "gitlens.hovers.enabled": false,
  "gitlens.menus": {
    "editorGroup": {
      "blame": false
    }
  },
  "gitlens.statusBar.enabled": false,
  "gitlens.views.branches.branches.layout": "list",
  "gitlens.views.stashes.files.layout": "list",
  "liveshare.allowInvites": "all",
  "liveshare.codeLens": false,
  "liveshare.languages.allowGuestCommandControl": true,
  "liveshare.launcherClient": "visualStudioCode",
  "liveshare.populateGitCoAuthors": "never",
  "liveshare.showInStatusBar": "whileCollaborating",
  "multiCommand.commands": [
    {
      "command": "multiCommand.runProject",
      "interval": 50,
      "sequence": [
        {
          "command": "command-runner.run",
          "args": {
            "command": "Pass",
            "terminal": {
              "name": "Project",
              "autoClear": true
            }
          }
        },
        {
          "command": "command-runner.run",
          "args": {
            "command": "Run Project",
            "terminal": {
              "name": "Project",
              "autoClear": true,
              "autoFocus": true
            }
          }
        }
      ]
    },
    {
      "command": "multiCommand.runTests",
      "interval": 50,
      "sequence": [
        {
          "command": "command-runner.run",
          "args": {
            "command": "Pass",
            "terminal": {
              "name": "Tests",
              "autoClear": true
            }
          }
        },
        {
          "command": "command-runner.run",
          "args": {
            "command": "Run Tests",
            "terminal": {
              "name": "Tests",
              "autoClear": true,
              "autoFocus": true
            }
          }
        }
      ]
    },
    {
      "command": "multiCommand.rustAnalysis",
      "sequence": [
        {
          "command": "command-runner.run",
          "variableSubstitution": true,
          "args": {
            "command": "Rust Analysis",
            "terminal": {
              "name": "Rust Analysis",
              "autoClear": true
            }
          }
        }
      ]
    }
  ],
  "multiclip.bufferSize": 20,
  "prettier.useEditorConfig": false,
  "playwright.reuseBrowser": false,
  "rust-analyzer.checkOnSave.command": "clippy",
  "rust-analyzer.hover.actions.debug.enable": false,
  "rust-analyzer.hover.actions.run.enable": false,
  "rust-analyzer.imports.granularity.enforce": true,
  "rust-analyzer.lens.debug.enable": false,
  "rust-analyzer.typing.autoClosingAngleBrackets.enable": true,
  "scss.scannerExclude": [
    ".DS_Store",
    ".git",
    ".idea",
    ".vscode",
    "coverage",
    "dist",
    "node_modules",
    "*.svg",
    "*.zsh",
    "package.json",
    "package-lock.json",
    "pnpm-lock.yaml",
    "yarn.lock",
    "Cargo.lock"
  ],
  "todo-tree.filtering.excludeGlobs": [
    ".DS_Store",
    ".git",
    ".idea",
    ".vscode",
    "coverage",
    "dist",
    "node_modules",
    "*.svg",
    "*.zsh",
    "package.json",
    "package-lock.json",
    "pnpm-lock.yaml",
    "yarn.lock",
    "Cargo.lock"
  ],
  "todo-tree.filtering.includeHiddenFiles": true,
  "todo-tree.general.statusBar": "tags",
  "todo-tree.highlights.highlightDelay": 0,
  "todo-tree.general.tags": [
    "TODO",
    "FIX",
    "BUG",
    "NOTE",
    "HACK",
    "FIXME",
    "FIXIT",
    "TOFIX",
    "XXX",
    "WORKAROUND",
    "@me",
    "@kajetan",
    "@welc",
    "@kajetanwelc",
    "@kajetan.welc",
    "@kwelc",
    "@k.welc",
    "@kajetanw",
    "@kajetan.w",
    "@kw",
    "@brofrain",
    "TODO @me",
    "TODO @kajetan",
    "TODO @welc",
    "TODO @kajetanwelc",
    "TODO @kajetan.welc",
    "TODO @kwelc",
    "TODO @k.welc",
    "TODO @kajetanw",
    "TODO @kajetan.w",
    "TODO @kw",
    "TODO @brofrain",
    "FIX @me",
    "FIX @kajetan",
    "FIX @welc",
    "FIX @kajetanwelc",
    "FIX @kajetan.welc",
    "FIX @kwelc",
    "FIX @k.welc",
    "FIX @kajetanw",
    "FIX @kajetan.w",
    "FIX @kw",
    "FIX @brofrain",
    "BUG @me",
    "BUG @kajetan",
    "BUG @welc",
    "BUG @kajetanwelc",
    "BUG @kajetan.welc",
    "BUG @kwelc",
    "BUG @k.welc",
    "BUG @kajetanw",
    "BUG @kajetan.w",
    "BUG @kw",
    "BUG @brofrain",
    "NOTE @me",
    "NOTE @kajetan",
    "NOTE @welc",
    "NOTE @kajetanwelc",
    "NOTE @kajetan.welc",
    "NOTE @kwelc",
    "NOTE @k.welc",
    "NOTE @kajetanw",
    "NOTE @kajetan.w",
    "NOTE @kw",
    "NOTE @brofrain",
    "HACK @me",
    "HACK @kajetan",
    "HACK @welc",
    "HACK @kajetanwelc",
    "HACK @kajetan.welc",
    "HACK @kwelc",
    "HACK @k.welc",
    "HACK @kajetanw",
    "HACK @kajetan.w",
    "HACK @kw",
    "HACK @brofrain",
    "FIXME @me",
    "FIXME @kajetan",
    "FIXME @welc",
    "FIXME @kajetanwelc",
    "FIXME @kajetan.welc",
    "FIXME @kwelc",
    "FIXME @k.welc",
    "FIXME @kajetanw",
    "FIXME @kajetan.w",
    "FIXME @kw",
    "FIXME @brofrain",
    "FIXIT @me",
    "FIXIT @kajetan",
    "FIXIT @welc",
    "FIXIT @kajetanwelc",
    "FIXIT @kajetan.welc",
    "FIXIT @kwelc",
    "FIXIT @k.welc",
    "FIXIT @kajetanw",
    "FIXIT @kajetan.w",
    "FIXIT @kw",
    "FIXIT @brofrain",
    "TOFIX @me",
    "TOFIX @kajetan",
    "TOFIX @welc",
    "TOFIX @kajetanwelc",
    "TOFIX @kajetan.welc",
    "TOFIX @kwelc",
    "TOFIX @k.welc",
    "TOFIX @kajetanw",
    "TOFIX @kajetan.w",
    "TOFIX @kw",
    "TOFIX @brofrain",
    "XXX @me",
    "XXX @kajetan",
    "XXX @welc",
    "XXX @kajetanwelc",
    "XXX @kajetan.welc",
    "XXX @kwelc",
    "XXX @k.welc",
    "XXX @kajetanw",
    "XXX @kajetan.w",
    "XXX @kw",
    "XXX @brofrain",
    "WORKAROUND @me",
    "WORKAROUND @kajetan",
    "WORKAROUND @welc",
    "WORKAROUND @kajetanwelc",
    "WORKAROUND @kajetan.welc",
    "WORKAROUND @kwelc",
    "WORKAROUND @k.welc",
    "WORKAROUND @kajetanw",
    "WORKAROUND @kajetan.w",
    "WORKAROUND @kw",
    "WORKAROUND @brofrain"
  ],
  "todo-tree.general.tagGroups": {
    "TODO": [
      "TODO"
    ],
    "FIX": [
      "FIX",
      "FIXME",
      "FIXIT",
      "TOFIX"
    ],
    "BUG": [
      "BUG"
    ],
    "NOTE": [
      "NOTE",
      "XXX"
    ],
    "HACK": [
      "HACK",
      "WORKAROUND"
    ],
    "@me": [
      "@me",
      "@kajetan",
      "@welc",
      "@kajetanwelc",
      "@kajetan.welc",
      "@kwelc",
      "@k.welc",
      "@kajetanw",
      "@kajetan.w",
      "@kw",
      "@brofrain",
      "TODO @me",
      "TODO @kajetan",
      "TODO @welc",
      "TODO @kajetanwelc",
      "TODO @kajetan.welc",
      "TODO @kwelc",
      "TODO @k.welc",
      "TODO @kajetanw",
      "TODO @kajetan.w",
      "TODO @kw",
      "TODO @brofrain",
      "FIX @me",
      "FIX @kajetan",
      "FIX @welc",
      "FIX @kajetanwelc",
      "FIX @kajetan.welc",
      "FIX @kwelc",
      "FIX @k.welc",
      "FIX @kajetanw",
      "FIX @kajetan.w",
      "FIX @kw",
      "FIX @brofrain",
      "BUG @me",
      "BUG @kajetan",
      "BUG @welc",
      "BUG @kajetanwelc",
      "BUG @kajetan.welc",
      "BUG @kwelc",
      "BUG @k.welc",
      "BUG @kajetanw",
      "BUG @kajetan.w",
      "BUG @kw",
      "BUG @brofrain",
      "NOTE @me",
      "NOTE @kajetan",
      "NOTE @welc",
      "NOTE @kajetanwelc",
      "NOTE @kajetan.welc",
      "NOTE @kwelc",
      "NOTE @k.welc",
      "NOTE @kajetanw",
      "NOTE @kajetan.w",
      "NOTE @kw",
      "NOTE @brofrain",
      "HACK @me",
      "HACK @kajetan",
      "HACK @welc",
      "HACK @kajetanwelc",
      "HACK @kajetan.welc",
      "HACK @kwelc",
      "HACK @k.welc",
      "HACK @kajetanw",
      "HACK @kajetan.w",
      "HACK @kw",
      "HACK @brofrain",
      "FIXME @me",
      "FIXME @kajetan",
      "FIXME @welc",
      "FIXME @kajetanwelc",
      "FIXME @kajetan.welc",
      "FIXME @kwelc",
      "FIXME @k.welc",
      "FIXME @kajetanw",
      "FIXME @kajetan.w",
      "FIXME @kw",
      "FIXME @brofrain",
      "FIXIT @me",
      "FIXIT @kajetan",
      "FIXIT @welc",
      "FIXIT @kajetanwelc",
      "FIXIT @kajetan.welc",
      "FIXIT @kwelc",
      "FIXIT @k.welc",
      "FIXIT @kajetanw",
      "FIXIT @kajetan.w",
      "FIXIT @kw",
      "FIXIT @brofrain",
      "TOFIX @me",
      "TOFIX @kajetan",
      "TOFIX @welc",
      "TOFIX @kajetanwelc",
      "TOFIX @kajetan.welc",
      "TOFIX @kwelc",
      "TOFIX @k.welc",
      "TOFIX @kajetanw",
      "TOFIX @kajetan.w",
      "TOFIX @kw",
      "TOFIX @brofrain",
      "XXX @me",
      "XXX @kajetan",
      "XXX @welc",
      "XXX @kajetanwelc",
      "XXX @kajetan.welc",
      "XXX @kwelc",
      "XXX @k.welc",
      "XXX @kajetanw",
      "XXX @kajetan.w",
      "XXX @kw",
      "XXX @brofrain",
      "WORKAROUND @me",
      "WORKAROUND @kajetan",
      "WORKAROUND @welc",
      "WORKAROUND @kajetanwelc",
      "WORKAROUND @kajetan.welc",
      "WORKAROUND @kwelc",
      "WORKAROUND @k.welc",
      "WORKAROUND @kajetanw",
      "WORKAROUND @kajetan.w",
      "WORKAROUND @kw",
      "WORKAROUND @brofrain"
    ]
  },
  "todo-tree.highlights.defaultHighlight": {
    "fontWeight": "600",
    "foreground": "#9097a3",
    "borderRadius": "3px",
    "rulerLane": "center",
    "rulerOpacity": 0.4
  },
  "todo-tree.highlights.customHighlight": {
    "TODO": {
      "icon": "light-bulb",
      "foreground": "#44cf6c",
      "background": "#44cf6c26",
      "iconColour": "#44cf6c",
      "rulerColour": "#44cf6c"
    },
    "FIX": {
      "icon": "tools",
      "foreground": "#f4ac32",
      "background": "#f4ac3226",
      "iconColour": "#f4ac32",
      "rulerColour": "#f4ac32"
    },
    "BUG": {
      "icon": "flame",
      "foreground": "#ff3e41",
      "background": "#ff3e4126",
      "iconColour": "#ff3e41",
      "rulerColour": "#ff3e41"
    },
    "NOTE": {
      "icon": "bookmark",
      "foreground": "#fffe",
      "hideFromStatusBar": true,
      "iconColour": "#fff",
      "rulerColour": "#fff"
    },
    "HACK": {
      "icon": "zap",
      "foreground": "#196df7",
      "hideFromStatusBar": true,
      "iconColour": "#196df7",
      "rulerColour": "#196df7"
    },
    "@me": {
      "icon": "mention",
      "foreground": "#fffe",
      "background": "#764dfa99",
      "iconColour": "#764dfa",
      "rulerColour": "#764dfa"
    }
  },
  "todo-tree.regex.regexCaseSensitive": false,
  "todo-tree.regex.regex": "(//|#|<!--|/[*]+|  \\*|^ \\*)\\s*($TAGS)([^a-zA-Z0-9\\[\\(])",
  "todo-tree.tree.buttons.expand": false,
  "todo-tree.tree.buttons.filter": false,
  "todo-tree.tree.buttons.groupByTag": false,
  "todo-tree.tree.buttons.viewStyle": false,
  "todo-tree.tree.scanMode": "workspace only",
  "todo-tree.tree.tagsOnly": true,
  "volar.autoCompleteRefs": true,
  "volar.codeLens.references": false,
  "volar.completion.preferredAttrNameCase": "kebab",
  "volar.completion.preferredTagNameCase": "pascal",
  "volar.icon.preview": false,
  "volar.icon.splitEditors": false,
  "volar.preview.backgroundColor": "#0000",
  "volar.takeOverMode.enabled": false,
  "volar.vueserver.useSecondServer": true,
  "cSpell.words": [
    "attributify",
    "clippy",
    "condvar",
    "cvar",
    "dbg",
    "dyn",
    "env",
    "fmt",
    "iconify",
    "lts",
    "npx",
    "num",
    "nvm",
    "onchange",
    "onclick",
    "pinia",
    "pnpm",
    "pwa",
    "ssg",
    "tabnine",
    "tailwindcss",
    "uno",
    "unocss",
    "vec",
    "vite",
    "vitest",
    "vsix",
    "vuex",
    "windicss",
    "wsl",
    "todo",
    "fix",
    "bug",
    "note",
    "hack",
    "fixme",
    "fixit",
    "tofix",
    "xxx",
    "workaround",
    "me",
    "kajetan",
    "welc",
    "kajetanwelc",
    "kwelc",
    "kajetanw",
    "kw",
    "brofrain"
  ]
}
